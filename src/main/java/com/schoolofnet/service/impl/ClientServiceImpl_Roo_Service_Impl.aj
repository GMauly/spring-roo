// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.schoolofnet.service.impl;

import com.schoolofnet.domain.Client;
import com.schoolofnet.repository.ClientRepository;
import com.schoolofnet.service.api.ClientService;
import com.schoolofnet.service.impl.ClientServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ClientServiceImpl_Roo_Service_Impl {
    
    declare parents: ClientServiceImpl implements ClientService;
    
    declare @type: ClientServiceImpl: @Service;
    
    declare @type: ClientServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     */
    private ClientRepository ClientServiceImpl.clientRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param clientRepository
     */
    @Autowired
    public ClientServiceImpl.new(ClientRepository clientRepository) {
        this.clientRepository = clientRepository;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param client
     */
    @Transactional
    public void ClientServiceImpl.delete(Client client) {
        clientRepository.delete(client);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Client> ClientServiceImpl.save(Iterable<Client> entities) {
        return clientRepository.save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void ClientServiceImpl.delete(Iterable<Long> ids) {
        List<Client> toDelete = clientRepository.findAll(ids);
        clientRepository.deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Client
     */
    @Transactional
    public Client ClientServiceImpl.save(Client entity) {
        return clientRepository.save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Client
     */
    public Client ClientServiceImpl.findOne(Long id) {
        return clientRepository.findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Client> ClientServiceImpl.findAll(Iterable<Long> ids) {
        return clientRepository.findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Client> ClientServiceImpl.findAll() {
        return clientRepository.findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long ClientServiceImpl.count() {
        return clientRepository.count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Client> ClientServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return clientRepository.findAll(globalSearch, pageable);
    }
    
}
